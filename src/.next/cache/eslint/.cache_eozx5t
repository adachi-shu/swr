[{"/Users/adachishuuyuu/Documents/MyJamstack/swr/src/pages/_app.tsx":"1","/Users/adachishuuyuu/Documents/MyJamstack/swr/src/pages/_document.tsx":"2","/Users/adachishuuyuu/Documents/MyJamstack/swr/src/pages/api/hello.ts":"3","/Users/adachishuuyuu/Documents/MyJamstack/swr/src/pages/index.tsx":"4","/Users/adachishuuyuu/Documents/MyJamstack/swr/src/pages/swr.tsx":"5"},{"size":179,"mtime":1671999682841,"results":"6","hashOfConfig":"7"},{"size":231,"mtime":1671999682841,"results":"8","hashOfConfig":"7"},{"size":307,"mtime":1671999682841,"results":"9","hashOfConfig":"7"},{"size":243,"mtime":1675062076254,"results":"10","hashOfConfig":"7"},{"size":1024,"mtime":1675060560122,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ywmu7w",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/Users/adachishuuyuu/Documents/MyJamstack/swr/src/pages/_app.tsx",[],[],"/Users/adachishuuyuu/Documents/MyJamstack/swr/src/pages/_document.tsx",[],[],"/Users/adachishuuyuu/Documents/MyJamstack/swr/src/pages/api/hello.ts",[],[],"/Users/adachishuuyuu/Documents/MyJamstack/swr/src/pages/index.tsx",[],[],"/Users/adachishuuyuu/Documents/MyJamstack/swr/src/pages/swr.tsx",["28","29"],[],"import useSWR from \"swr\";\nimport {client} from \"../libs/client\"\nimport { useRouter } from 'next/router';\n\nconst fetcher = async (context: any) => {\n  const {slug, draftKey} = context.query;\n  const data = await client.get({\n    endpoint: \"blog\",\n    contentId: slug,\n    queries: { draftKey: draftKey }\n  });\n  // const res = await fetch(`https://myblogadachi.microcms.io/api/v1/blog/${slug}?draftKey=${draftKey}`, {headers: {\"X-MICROCMS-API-KEY\": process.env.API_KEY}})\n  // const data = res.json();\n  return data;\n}\n\nexport default function CSR() {\n  const router = useRouter();\n  const {data, error} = useSWR(\n    router,\n    fetcher,\n    {\n      refreshInterval: 20000,\n    });\n\n  if(error) return \"An error has occured\";\n  if(!data) return \"Loading ...\";\n\n  return (\n    <main>\n      <h1>プレビュー</h1>\n      <div>\n        <p>id: {data.id}をゲット</p>\n        <p>title: {data.title}をゲット</p>\n        <p>body: {data.body}をゲット</p>\n        <img src={data.img.url}/>\n      </div>\n    </main>\n  );\n}",{"ruleId":"30","severity":1,"message":"31","line":36,"column":9,"nodeType":"32","endLine":36,"endColumn":34},{"ruleId":"33","severity":1,"message":"34","line":36,"column":9,"nodeType":"32","endLine":36,"endColumn":34},"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Use `<Image />` from `next/image` instead to utilize Image Optimization. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]